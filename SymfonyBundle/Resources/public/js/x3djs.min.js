X3d=function(){};X3d.transformObjectByMatrix=function(a,b){if(a instanceof THREE.Object3D){a.applyMatrix(b);if(a instanceof THREE.SpotLight){a.target.position.applyMatrix4(b)}}};X3d.Node=function(a){this.node=a};X3d.Node.getInstance=function(b){var a=b.prop("tagName"),c=null;switch(a){case"NavigationInfo":c=new X3d.NavigationInfoNode(b);break;case"Background":c=new X3d.BackgroundNode(b);break;case"Scene":c=new X3d.SceneNode(b);break;case"Transform":c=new X3d.TransformNode(b);break;case"Group":c=new X3d.GroupNode(b);break;case"Shape":c=new X3d.ShapeNode(b);break;case"DirectionalLight":c=new X3d.DirectionalLightNode(b);break;case"PointLight":c=new X3d.PointLightNode(b);break;case"SpotLight":c=new X3d.SpotLightNode(b);break;case"Viewpoint":c=new X3d.ViewpointNode(b);break;case"Appearance":c=new X3d.AppearanceNode(b);break;case"Material":c=new X3d.MaterialNode(b);break;case"LineProperties":c=new X3d.LinePropertiesNode(b);break;case"ImageTexture":c=new X3d.ImageTextureNode(b);break;case"TextureTransform":c=new X3d.TextureTransformNode(b);break;case"IndexedFaceSet":c=new X3d.IndexedFaceSetNode(b);break;case"IndexedLineSet":c=new X3d.IndexedLineSetNode(b);break;case"Coordinate":c=new X3d.CoordinateNode(b);break;case"TextureCoordinate":c=new X3d.TextureCoordinateNode(b);break;case"Color":c=new X3d.ColorNode(b);break;default:throw new X3d.UnknownNodeException(a)}return c};X3d.Node.prototype.parseArray=function(d,c){var b,a;b=d.replace(/\s+/g," ");b=b.replace(/^\s+/,"");b=b.replace(/\s+$/,"");a=b.split(" ");return a.map(c)};X3d.Node.prototype.parseIntArray=function(a){return this.parseArray(a,function(b){return parseInt(b)})};X3d.Node.prototype.parseFloatArray=function(a){return this.parseArray(a,function(b){return parseFloat(b)})};X3d.Node.prototype.parseVector2=function(b){var a=this.parseFloatArray(b);return new THREE.Vector2(a[0],a[1])};X3d.Node.prototype.parseVector2Array=function(d){var c=this.parseFloatArray(d),e=c.length,b=[],a=0;while(a<e){b.push(new THREE.Vector2(c[a],c[a+1]));a=a+2}return b};X3d.Node.prototype.parseVector3=function(b){var a=this.parseFloatArray(b);return new THREE.Vector3(a[0],a[1],a[2])};X3d.Node.prototype.parseVector3Array=function(d){var c=this.parseFloatArray(d),e=c.length,b=[],a=0;while(a<e){b.push(new THREE.Vector3(c[a],c[a+1],c[a+2]));a=a+3}return b};X3d.SceneLoader=function(){this.x3dSceneNode=null;this.cachedNodes={};this.background={};this.scene=null;this.sceneCamera=null;this.lights=[];this.textureTree=new X3d.TextureTree();this.createMaterial=this.createMaterialDefaultHandler;this.deferred=null;this.promise=null};X3d.SceneLoader.prototype.loadSceneFromX3d=function(b){var a=this;a.deferred=new $.Deferred();a.promise=a.deferred.promise();a.cachedNodes={};a.background={};a.sceneCamera=null;a.lights=[];$.when(a.textureTree.getPromise()).then(function(){return $.ajax({url:b,type:"GET",data:{}})}).done(function(c){try{a.x3dSceneNode=$(c).find("Scene");a.scene=a.parseX3dNode(a.x3dSceneNode);a.lights.forEach(function(e){a.scene.add(e)});a.textureTree.evaluateCallbacks();a.deferred.resolve(a.scene)}catch(d){a.deferred.reject(d.message)}}).fail(function(c){a.deferred.reject(c)});return a.promise};X3d.SceneLoader.prototype.parseX3dNode=function(c){var a=this,b=c.attr("DEF")||c.attr("USE"),e,f,d;if(b&&a.cachedNodes[b]){d=a.cachedNodes[b];console.log("cached node: "+b)}else{if(c.attr("USE")){e=a.x3dSceneNode.find('[DEF="'+c.attr("USE")+'"]')}else{e=c}f=X3d.Node.getInstance(e);d=f.parse(a);if(b){a.cachedNodes[b]=d}}return d};X3d.SceneLoader.prototype.getPromise=function(){return this.promise};X3d.SceneLoader.prototype.loadTextureTreeFromXml=function(b){var a=this;a.textureTree.loadFromXml(b);return a.textureTree.getPromise()};X3d.SceneLoader.prototype.unloadTextureTree=function(){this.textureTree=new X3d.TextureTree()};X3d.SceneLoader.prototype.getPromise=function(){return this.deferred.promise()};X3d.SceneLoader.prototype.setCreateMaterialHandler=function(a){this.createMaterial=a};X3d.SceneLoader.prototype.createMaterialDefaultHandler=function(a){return new THREE.MeshLambertMaterial(a)};X3d.SceneLoader.prototype.getScene=function(){return this.scene};X3d.SceneLoader.prototype.getCamera=function(){return this.sceneCamera};X3d.SceneLoader.prototype.getLights=function(){return this.lights};X3d.SceneLoader.prototype.hasNode=function(a){return(this.cachedNodes[a]!==null)};X3d.SceneLoader.prototype.getNode=function(a){return this.cachedNodes[a]};X3d.TextureTree=function(){this.textures={};this.deferred=new $.Deferred();this.deferred.resolve();this.promise=this.deferred.promise()};X3d.TextureTree.getTextureIdByName=function(a){return a.replace(".","_")};X3d.TextureTree.prototype.getPromise=function(){return this.promise};X3d.TextureTree.prototype.loadFromXml=function(b){var a=this;a.deferred=new $.Deferred();a.promise=a.deferred.promise();$.when($.ajax({url:b,type:"GET",data:{}})).done(function(d){var c=$(d).find("textures");try{a.textures={};c.children().each(function(){a.parseTextureNode(a,$(this),null)});a.deferred.resolve()}catch(f){a.deferred.reject(f.message)}}).fail(function(c){a.deferred.reject(c)});return a.promise};X3d.TextureTree.prototype.parseTextureNode=function(a,c,g){var e,f,d={},b;e=c.attr("name");if(!e){throw new X3d.InvalidTextureException("Attribute name is mandatory")}d.name=e;f=X3d.TextureTree.getTextureIdByName(d.name);e=c.attr("url");if(!g&&!e){throw new X3d.InvalidTextureException("Attribute url is mandatory for root level textures")}d.url=e;e=c.attr("width");if(!e){throw new X3d.InvalidTextureException("Attribute width is mandatory")}d.width=parseInt(e);e=c.attr("height");if(!e){throw new X3d.InvalidTextureException("Attribute height is mandatory")}d.height=parseInt(e);e=c.attr("left");if(e){d.left=parseInt(e)}e=c.attr("top");if(e){d.top=parseInt(e)}if(g){d.parentId=g;b=a.textures[g];if(b.parentId){throw new X3d.Exception("Texture tree can only have hierarchy depth <= 2!")}d.ub=d.left/b.width;d.ua=d.width/b.width;d.vb=1-(d.height+d.top)/b.height;d.va=d.height/b.height}else{d.callbacks=[]}a.textures[f]=d;c.children().each(function(){a.parseTextureNode(a,$(this),f)})};X3d.TextureTree.prototype.loadTexture=function(d,c){var f=X3d.TextureTree.getTextureIdByName(d.name),b,a,e=null;if(this.textures[f]){if(this.textures[f].parentId){b=this.textures[f].parentId;if(this.textures[b]){a=this.textures[b];console.log("texture "+f+" found in tree, loading parent url "+a.url)}}else{a=this.textures[f];console.log("root level texture "+f+" found in tree, loading url "+a.url)}}else{this.textures[f]={name:d.name,url:d.url,callbacks:[]};a=this.textures[f];console.log("texture "+f+" not found in tree, loading "+a.url)}if(a.url&&!a.parentId){if(!a.data){a.data=new THREE.Texture(undefined,THREE.UVMapping);a.data.sourceFile=a.url}a.callbacks.push(c)}return a.data};X3d.TextureTree.prototype.evaluateCallbacks=function(){var a=this,b;for(var c in a.textures){(function(f){var e=a.textures[f],d=new THREE.ImageLoader();if(!e.parentId&&e.callbacks.length>0){d.load(e.url,function(g){e.data.image=g;e.data.needsUpdate=true;e.callbacks.forEach(function(h){h(e.data)})})}}(c))}};X3d.TextureTree.prototype.getAbsoluteCoordinates=function(b,f){var g=X3d.TextureTree.getTextureIdByName(b),e,d,c,a=[];if(this.textures[g]&&this.textures[g].parentId){console.log("texture "+b+"(id="+g+") has parent with id="+this.textures[g].parentId);e=this.textures[g];f.forEach(function(h){d=e.ua*h.x+e.ub;if(d<0){d=0}if(d>1){d=1}c=e.va*h.y+e.vb;if(c<0){c=0}if(c>1){c=1}a.push(new THREE.Vector2(d,c))})}else{console.log("texture "+b+" (id="+g+") has no parent");a=f}return a};X3d.Exception=function(a){this.name="Exception";this.message=a};X3d.Exception.prototype.getMessage=function(){return this.message};X3d.InvalidTextureException=function(a){X3d.Exception.call(this,a);this.name="X3dInvalidTextureException";this.message="Invalid texture";if(a){this.message=this.message+": "+a}};X3d.InvalidTextureException.prototype=Object.create(X3d.Exception.prototype);X3d.UnknownNodeException=function(a){X3d.Exception.call(this,a);this.name="X3dUnknownNodeException";this.message="Unknown X3D node";if(a){this.message=this.message+": "+a}};X3d.UnknownNodeException.prototype=Object.create(X3d.Exception.prototype);X3d.GeometryNode=function(a){X3d.Node.call(this,a)};X3d.GeometryNode.prototype=Object.create(X3d.Node.prototype);X3d.GeometryNode.prototype.createMesh=function(a,b){};X3d.LightNode=function(a){X3d.Node.call(this,a)};X3d.LightNode.prototype=Object.create(X3d.Node.prototype);X3d.LightNode.prototype.parseBasicLightProperties=function(e){var d,b,a,c;console.log("parsing X3D light");d=this.node.attr("on");if(d){this.on=(d=="TRUE")}else{this.on=true}this.color=new THREE.Color();d=this.node.attr("color");if(d){b=this.parseFloatArray(d);this.color.setRGB(b[0],b[1],b[2])}else{this.color.setRGB(1,1,1)}d=this.node.attr("intensity");if(d){b=this.parseFloatArray(d);this.intensity=b[0]}else{this.intensity=1}d=this.node.attr("ambientIntensity");if(d){b=this.parseFloatArray(d);a=b[0];if(a>0){console.log("adding ambient light component with intensity "+a);c=new THREE.Color();c.copy(this.color);c.multiplyScalar(a);e.lights.push(new THREE.AmbientLight(c.getHex()))}}};X3d.AppearanceNode=function(a){X3d.Node.call(this,a)};X3d.AppearanceNode.prototype=Object.create(X3d.Node.prototype);X3d.AppearanceNode.prototype.parse=function(b){var a=this;console.log("parsing X3D appearance");a.node.children().each(function(){var f,c=$(this);try{f=b.parseX3dNode(c);if(f instanceof X3d.MaterialNode){a.material=f}else{if(f instanceof X3d.LinePropertiesNode){a.lineProperties=f}else{if(f instanceof X3d.ImageTextureNode){a.texture=f}else{if(f instanceof X3d.TextureTransformNode){a.textureTransform=f}}}}}catch(d){throw d}});return a};X3d.AppearanceNode.prototype.getMaterialProperties=function(e){var a=this,c={},d,b=(a.material.transparency&&a.material.transparency>0);c.shading=THREE.SmoothShading;c.vertexColors=THREE.VertexColors;if(a.material.solid){c.side=THREE.FrontSide}else{c.side=THREE.DoubleSide}if(a.texture&&a.texture.name){d=e.textureTree.loadTexture(a.texture,function(f){d.needsUpdate=true});c.map=d}if(b){c.transparent=b;c.opacity=1-a.material.transparency}return c};X3d.BackgroundNode=function(a){X3d.Node.call(this,a)};X3d.BackgroundNode.prototype=Object.create(X3d.Node.prototype);X3d.BackgroundNode.prototype.parse=function(d){var b={},c,a;console.log("parsing X3D background");b.groundColor=new THREE.Color();c=this.node.attr("groundColor");if(c){a=this.parseFloatArray(c);b.groundColor.setRGB(a[0],a[1],a[2])}else{b.groundColor.setRGB(0,0,0)}b.skyColor=new THREE.Color();c=this.node.attr("skyColor");if(c){a=this.parseFloatArray(c);b.skyColor.setRGB(a[0],a[1],a[2])}else{b.skyColor.setRGB(0,0,0)}X3d.background=b;return null};X3d.ColorNode=function(a){X3d.Node.call(this,a)};X3d.ColorNode.prototype=Object.create(X3d.Node.prototype);X3d.ColorNode.prototype.parse=function(e){var b=this,d,c,a;b.colors=[];console.log("parsing X3D color");d=this.node.attr("color");if(d){c=this.parseVector3Array(d);c.forEach(function(f){a=new THREE.Color();a.setRGB(f.x,f.y,f.z);b.colors.push(a)})}return b};X3d.CoordinateNode=function(a){X3d.Node.call(this,a)};X3d.CoordinateNode.prototype=Object.create(X3d.Node.prototype);X3d.CoordinateNode.prototype.parse=function(c){var a=this,b;console.log("parsing X3D coordinate");b=this.node.attr("point");if(b){a.coordinates=this.parseVector3Array(b)}else{a.coordinates=[]}return a};X3d.DirectionalLightNode=function(a){X3d.LightNode.call(this,a)};X3d.DirectionalLightNode.prototype=Object.create(X3d.LightNode.prototype);X3d.DirectionalLightNode.prototype.parse=function(d){var c,b,a;console.log("parsing X3D directional light");this.parseBasicLightProperties(d);c=this.node.attr("direction");if(c){this.direction=this.parseVector3(c)}a=new THREE.DirectionalLight(this.color.getHex(),this.intensity);a.position=this.direction;a.position.negate();return a};X3d.GroupNode=function(a){X3d.Node.call(this,a)};X3d.GroupNode.prototype=Object.create(X3d.Node.prototype);X3d.GroupNode.prototype.parse=function(b){var a=new THREE.Object3D(),c;console.log("parsing X3D group "+this.node.attr("DEF"));this.node.children().each(function(){try{c=b.parseX3dNode($(this));a.add(c)}catch(d){throw d}});return a};X3d.ImageTextureNode=function(a){X3d.Node.call(this,a)};X3d.ImageTextureNode.prototype=Object.create(X3d.Node.prototype);X3d.ImageTextureNode.prototype.parse=function(d){var a=this,b,c;console.log("parsing X3D image texture");b=this.node.attr("url");if(b){c=/(\"|\')([^\s]+)(?:\1)\s+(\"|\')([^\s]+)(?:\3)/.exec(b);a.url=c[2];a.name=c[4]}return a};X3d.IndexedFaceSetNode=function(a){X3d.GeometryNode.call(this,a)};X3d.IndexedFaceSetNode.prototype=Object.create(X3d.GeometryNode.prototype);X3d.IndexedFaceSetNode.prototype.parse=function(e){var a=this,f,c,d,b;console.log("parsing X3D indexed face set");c=a.node.attr("solid");if(c){a.solid=(c==="true")}else{a.solid=false}c=a.node.attr("creaseAngle");if(c){b=a.parseFloatArray(c);a.creaseAngle=b[0]}else{a.creaseAngle=0}c=a.node.attr("coordIndex");if(c){a.coordIndex=a.parseIntArray(c)}c=a.node.attr("texCoordIndex");if(c){a.texCoordIndex=a.parseIntArray(c)}a.node.children().each(function(){var g=$(this);try{f=e.parseX3dNode(g);if(f instanceof X3d.CoordinateNode){a.vertexCoordinates=f.coordinates}else{if(f instanceof X3d.TextureCoordinateNode){a.textureCoordinates=f.coordinates}}}catch(h){throw h}});return a};X3d.IndexedFaceSetNode.prototype.createMesh=function(e,b){var m=this,j=new THREE.Geometry(),g=[],i=[0,0,0],h,c=0,k,d=function(n,q,s,p,r){var o=n.normal.dot(s.normal)/(n.normal.length()*s.normal.length());if(o>=r){n.vertexNormals[q].add(s.normal);s.vertexNormals[p].add(n.normal)}},a=function(t,p,o,s){var r=b.textureTree.getAbsoluteCoordinates(s.name,o),n=[0,0,0],q=0;p.forEach(function(u){if(u>=0){if(q<3){n[q]=u;q++}if(q==3){t.faceVertexUvs[0].push([new THREE.Vector2(r[n[0]].x,r[n[0]].y),new THREE.Vector2(r[n[1]].x,r[n[1]].y),new THREE.Vector2(r[n[2]].x,r[n[2]].y)]);n[1]=u;q=2}}else{q=0}})},l=function(p,r){var v={},y,z,x,q,o,n;y=0;p.forEach(function(A){if(!(A.a in v)){v[A.a]={}}v[A.a][y]=0;if(!(A.b in v)){v[A.b]={}}v[A.b][y]=1;if(!(A.c in v)){v[A.c]={}}v[A.c][y]=2;y++});for(var u in v){x=v[u];z=[];for(var w in x){z.push(w)}q=z.length;for(var t=0;t<q;t++){for(var s=t+1;s<q;s++){o=z[t];n=z[s];d(p[o],x[o],p[n],x[n],r)}}}p.forEach(function(A){A.vertexNormals.forEach(function(B){B.normalize()})})},f=function(r,p){var s={},n=0,o;r.faces.forEach(function(t){s[t.a]=0;s[t.b]=0;s[t.c]=0});for(var q in s){n++}r.vertices=[];if(n<p.length){o=0;for(var q in s){r.vertices.push(p[q].clone());s[q]=o;o++}r.faces.forEach(function(t){t.a=s[t.a];t.b=s[t.b];t.c=s[t.c]})}else{p.forEach(function(t){r.vertices.push(t.clone())})}};console.log("creating face geometry...");if(typeof e.material==="undefined"){console.log("no material found, adding standard material");e.material={diffuseColor:new THREE.Color()};e.material.diffuseColor.setRGB(1,1,1)}if(e.material.diffuseColor){k=e.material.diffuseColor}else{k=e.material.emissiveColor}e.material.solid=m.solid;j.faces=[];m.coordIndex.forEach(function(n){if(n>=0){if(c<3){i[c]=n;c++}if(c===3){h=new THREE.Face3(i[0],i[1],i[2]);j.faces.push(h);i[1]=n;c=2}}else{c=0}});m.vertexCoordinates.forEach(function(n){g.push(n.clone())});f(j,g);j.faceVertexUvs[0]=[];j.computeFaceNormals();j.computeCentroids();j.faces.forEach(function(n){n.vertexNormals=[n.normal.clone(),n.normal.clone(),n.normal.clone()];n.vertexColors=[k.clone(),k.clone(),k.clone()]});if(m.creaseAngle>0){l(j.faces,Math.cos(m.creaseAngle))}if(e.texture&&m.textureCoordinates.length>0&&m.texCoordIndex.length>0){a(j,m.texCoordIndex,m.textureCoordinates,e.texture)}return new THREE.Mesh(j,b.createMaterial(e.getMaterialProperties(b)))};X3d.IndexedLineSetNode=function(a){X3d.GeometryNode.call(this,a)};X3d.IndexedLineSetNode.prototype=Object.create(X3d.GeometryNode.prototype);X3d.IndexedLineSetNode.prototype.parse=function(c){var a=this,d,b;console.log("parsing X3D indexed line set");b=a.node.attr("coordIndex");if(b){a.coordIndex=a.parseIntArray(b)}b=this.node.attr("colorIndex");if(b){a.colorIndex=a.parseIntArray(b)}a.node.children().each(function(){var f=$(this);try{d=c.parseX3dNode(f);if(d instanceof X3d.CoordinateNode){a.vertexCoordinates=d.coordinates}else{if(d instanceof X3d.ColorNode){a.vertexColors=d.colors}}}catch(g){throw g}});return a};X3d.IndexedLineSetNode.prototype.createMesh=function(d,c){var i=this,k=new THREE.Object3D(),a,g=0,h=0,j=0,f,b={},e=function(){k.add(new THREE.Line(a,new THREE.LineBasicMaterial(b)));g=0;h++};console.log("creating line strips...");if(i.colorIndex&&i.vertexColors){b.vertexColors=THREE.VertexColors}else{if(d.material&&d.material.emissiveColor){b.color=d.material.emissiveColor.getHex()}else{b.color=16777215}}if(d.lineProperties&&d.lineProperties.lineWidth){b.linewidth=d.lineProperties.lineWidth}else{b.linewidth=1}if(d.material&&d.material.transparency&&d.material.transparency>0){b.transparent=true;b.opacity=1-d.material.transparency}i.coordIndex.forEach(function(m){var l;if(m>=0){if(g==0){a=new THREE.Geometry();a.vertices=[];a.colors=[]}a.vertices.push(new THREE.Vector3(i.vertexCoordinates[m].x,i.vertexCoordinates[m].y,i.vertexCoordinates[m].z));if(i.colorIndex&&i.vertexColors){f=i.colorIndex[j];l=new THREE.Color();l.setRGB(i.vertexColors[f].r,i.vertexColors[f].g,i.vertexColors[f].b);a.colors.push(l)}g++}else{if(g>0){e()}}j++});if(g>0){e()}return k};X3d.LinePropertiesNode=function(a){X3d.Node.call(this,a)};X3d.LinePropertiesNode.prototype=Object.create(X3d.Node.prototype);X3d.LinePropertiesNode.prototype.parse=function(d){var b=this,c,a;console.log("parsing X3D line properties");c=this.node.attr("applied");if(c){b.applied=(c=="TRUE")}else{b.applied=false}c=this.node.attr("linetype");if(c){a=this.parseIntArray(c);b.lineType=a[0]}else{b.lineType=1}c=this.node.attr("linewidthScaleFactor");if(c){a=this.parseFloatArray(c);b.lineWidth=Math.max(1,a[0])}else{b.lineWidth=1}return b};X3d.MaterialNode=function(a){X3d.Node.call(this,a)};X3d.MaterialNode.prototype=Object.create(X3d.Node.prototype);X3d.MaterialNode.prototype.parse=function(d){var b=this,c,a;console.log("parsing X3D material");c=this.node.attr("diffuseColor");if(c){a=this.parseFloatArray(c);b.diffuseColor=new THREE.Color();b.diffuseColor.setRGB(a[0],a[1],a[2])}c=this.node.attr("specularColor");if(c){a=this.parseFloatArray(c);b.specularColor=new THREE.Color();b.specularColor.setRGB(a[0],a[1],a[2])}c=this.node.attr("emissiveColor");if(c){a=this.parseFloatArray(c);b.emissiveColor=new THREE.Color();b.emissiveColor.setRGB(a[0],a[1],a[2])}c=this.node.attr("ambientIntensity");if(c){a=this.parseFloatArray(c);b.ambientIntensity=a[0]}c=this.node.attr("shininess");if(c){a=this.parseFloatArray(c);b.shininess=a[0]}c=this.node.attr("transparency");if(c){a=this.parseFloatArray(c);b.transparency=a[0]}return b};X3d.NavigationInfoNode=function(a){X3d.Node.call(this,a)};X3d.NavigationInfoNode.prototype=Object.create(X3d.Node.prototype);X3d.NavigationInfoNode.prototype.parse=function(a){console.log("parsing X3D navigation info");return null};X3d.PointLightNode=function(a){X3d.LightNode.call(this,a)};X3d.PointLightNode.prototype=Object.create(X3d.LightNode.prototype);X3d.PointLightNode.prototype.parse=function(d){var c,b,a;console.log("parsing X3D point light");this.parseBasicLightProperties(d);c=this.node.attr("radius");if(c){b=this.parseFloatArray(c);this.distance=b[0]}else{this.distance=0}a=new THREE.PointLight(this.color.getHex(),this.intensity,this.distance);return a};X3d.SceneNode=function(a){X3d.Node.call(this,a)};X3d.SceneNode.prototype=Object.create(X3d.Node.prototype);X3d.SceneNode.prototype.parse=function(b){var a=new THREE.Scene(),c;console.log("parsing X3D scene");this.node.children().each(function(){try{c=b.parseX3dNode($(this));if(c!==null){a.add(c)}}catch(d){throw d}});return a};X3d.ShapeNode=function(a){X3d.Node.call(this,a)};X3d.ShapeNode.prototype=Object.create(X3d.Node.prototype);X3d.ShapeNode.prototype.parse=function(c){var e,a={},b=[],d=null;console.log("parsing X3D shape");this.node.children().each(function(){try{e=c.parseX3dNode($(this));if(e instanceof X3d.AppearanceNode){a=e}else{if(e instanceof X3d.GeometryNode){b.push(e)}}}catch(f){throw f}});b.forEach(function(f){d=f.createMesh(a,c)});return d};X3d.SpotLightNode=function(a){X3d.LightNode.call(this,a)};X3d.SpotLightNode.prototype=Object.create(X3d.LightNode.prototype);X3d.SpotLightNode.prototype.parse=function(d){var c,b,a;console.log("parsing X3D spot light");this.parseBasicLightProperties(d);c=this.node.attr("location");if(c){this.location=this.parseVector3(c)}c=this.node.attr("direction");if(c){this.direction=this.parseVector3(c)}c=this.node.attr("radius");if(c){b=this.parseFloatArray(c);this.distance=b[0]}c=this.node.attr("beamWidth");if(c){b=this.parseFloatArray(c);this.beamWidth=b[0]}c=this.node.attr("cutOffAngle");if(c){b=this.parseFloatArray(c);this.angle=b[0]}c=this.node.attr("attenuation");if(c){this.attenuation=this.parseFloatArray(c)}this.exponent=1;a=new THREE.SpotLight(this.color.getHex(),this.intensity,this.distance,this.angle,this.exponent);a.position.copy(this.location);a.target.position.copy(this.location);a.target.position.add(this.direction);return a};X3d.TextureCoordinateNode=function(a){X3d.Node.call(this,a)};X3d.TextureCoordinateNode.prototype=Object.create(X3d.Node.prototype);X3d.TextureCoordinateNode.prototype.parse=function(c){var a=this,b;console.log("parsing X3D texture coordinates");b=this.node.attr("point");if(b){a.coordinates=this.parseVector2Array(b)}else{a.coordinates=[]}return a};X3d.TextureTransformNode=function(a){X3d.Node.call(this,a)};X3d.TextureTransformNode.prototype=Object.create(X3d.Node.prototype);X3d.TextureTransformNode.prototype.parse=function(d){var b=this,c,a;console.log("parsing X3D texture transform");c=this.node.attr("translation");if(c){b.transform=this.parseVector2(c)}c=this.node.attr("scale");if(c){b.scale=this.parseVector2(c)}c=this.node.attr("rotation");if(c){a=this.parseFloatArray(c);b.rotation=a[0]}return b};X3d.TransformNode=function(a){X3d.Node.call(this,a)};X3d.TransformNode.prototype=Object.create(X3d.Node.prototype);X3d.TransformNode.prototype.parse=function(b){var g=this,d=new THREE.Object3D(),a,i,f,c,e,h;console.log("parsing X3D transform "+g.node.attr("DEF"));h=new THREE.Matrix4();a=g.node.attr("rotation");if(a){i=this.parseFloatArray(a);e=new THREE.Quaternion();e.setFromAxisAngle(new THREE.Vector3(i[0],i[1],i[2]),i[3]);h.makeRotationFromQuaternion(e)}else{h.identity()}a=g.node.attr("scale");if(a){c=g.parseVector3(a);h.scale(c)}a=g.node.attr("translation");if(a){f=g.parseVector3(a);h.setPosition(f)}this.node.children().each(function(){var k;try{k=b.parseX3dNode($(this));if(k instanceof THREE.Camera){X3d.transformObjectByMatrix(k,h);b.sceneCamera=k}else{if(k instanceof THREE.Light){X3d.transformObjectByMatrix(k,h);b.lights.push(k)}else{d.add(k)}}}catch(j){throw j}});if(d.children.length>0){d.applyMatrix(h)}else{d=null}return d};X3d.ViewpointNode=function(a){X3d.Node.call(this,a)};X3d.ViewpointNode.prototype=Object.create(X3d.Node.prototype);X3d.ViewpointNode.prototype.parse=function(d){var b,c,a,e;console.log("parsing X3D viewpoint (camera)");c=this.node.attr("fieldOfView");if(c){a=this.parseFloatArray(c);e=180*a[0]/Math.PI}else{e=45}b=new THREE.PerspectiveCamera(e,4/3,0.1,1000);return b};